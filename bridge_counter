#lang simply-scheme
(define (card-val card)
  (cond ((equal? (last card) 'a) 4)
        ((equal? (last card) 'k) 3)
        ((equal? (last card) 'q) 2)
        ((equal? (last card) 'j) 1)
        (else 0)))

(define (high-card-points hand)
  (accumulate + (every card-val hand)))

(define (count-suit suit hand)
  (accumulate + (every (lambda (sl) (if (equal? suit (first sl))
                           1
                       0)) hand)))

(define (suit-counts hand)
  (sentence (count-suit 's hand)
            (count-suit 'h hand)
            (count-suit 'c hand)
            (count-suit 'd hand)))

 
